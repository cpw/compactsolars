<?xml version="1.0" encoding="UTF-8"?>
<!-- ======================================================================


     CompactSolarArrays
     More solars in a block

     cpw
     ====================================================================== -->
<project name="CompactSolars" default="build">
  <description>Compact Solars</description>
  <target name="writeversion" depends="buildenvsetup">
    <exec executable="${python.exe}" dir="${basedir}" failonerror="true">
      <arg value="${basedir}/getversion.py" />
      <arg value="${mcp.home}" />
    </exec>
    <propertyfile file="version.properties">
      <entry key="CompactSolars.build.number" type="int" value="${version.build}"/>
      <entry key="CompactSolars.version" type="string" value="${version}"/>
    </propertyfile>
  </target>

  <target name="buildenvsetup">
    <tstamp>
      <format pattern="yyMMddHHmmss" property="timestamp" />
    </tstamp>
    <property environment="env" />
    <property file="build.properties" />
    <property name="modname" value="compactsolars" />
    <condition property="mcp.home" value="${env.WORKSPACE}/mcpworkspace/forge/mcp" else="${default.mcp.home}">
      <isset property="env.WORKSPACE" />
    </condition>
    <condition property="python.exe" value="${mcp.home}/runtime/bin/python/python_mcp" else="python">
      <os family="Windows" />
    </condition>
    <property name="mcp.obfoutput" location="${mcp.home}/reobf" />
    <property name="mcp.obfoutput.classes" location="${mcp.obfoutput}/minecraft" />
    <property name="mcp.srcdir" location="${mcp.home}/src" />
    <property name="client.mcp.srcdir" location="${mcp.srcdir}/minecraft" />
    <property name="src.dir" location="${basedir}/src" />
    <property name="ic2api.src.dir" location="${basedir}/../ic2api/src" />
    <property name="resource.dir" location="${basedir}/resources" />
    <condition property="version.build" value="${env.BUILD_NUMBER}" else="1">
      <isset property="env.BUILD_NUMBER" />
    </condition>
  </target>

  <target name="init" depends="buildenvsetup">
    <antcall target="writeversion" />
    <property file="version.properties" />
    <property name="build.number" value="${CompactSolars.build.major.number}.${compactsolars.build.minor.number}.${compactsolars.build.revision.number}" />
    <property name="version.minecraft" value="${CompactSolars.build.mcversion}" />
    <property name="version.major" value="${CompactSolars.build.major.number}" />
    <property name="version.minor" value="${CompactSolars.build.minor.number}" />
    <property name="version.rev" value="${CompactSolars.build.revision.number}" />
    <property name="version" value="${version.major}.${version.minor}.${version.rev}.${version.build}" />
    <antcall target="writeversion" />
  </target>

  <target name="clean" depends="buildenvsetup">
    <antcall target="clean-source"/>
    <exec executable="${python.exe}" dir="${mcp.home}">
      <arg value="${mcp.home}/runtime/updatemd5.py" />
      <arg value="-f" />
    </exec>
  </target>

  <target name="recompile" depends="init">
    <exec executable="${python.exe}" dir="${mcp.home}" failonerror="true">
      <arg value="${mcp.home}/runtime/recompile.py" />
    </exec>
  </target>

  <target name="reobfuscate" depends="init">
    <exec executable="${python.exe}" dir="${mcp.home}">
      <arg value="${mcp.home}/runtime/reobfuscate.py" />
      <arg value="--srgnames" />
    </exec>
  </target>

  <target name="merge" depends="init">
    <copy todir="${client.mcp.srcdir}" overwrite="true" verbose="true">
      <fileset dir="${src.dir}" includes="**/*.java" />
      <fileset dir="${ic2api.src.dir}" includes="**/*.java" />
    </copy>
  </target>

  <target name="build-universal" depends="init,clean,merge,recompile,reobfuscate">
    <antcall target="writeversion" />
    <antcall target="extract-built-jar"/>
  </target>

  <target name="extract-built-jar">
    <property name="jarname" value="${modname}-universal-${version.minecraft}-${version}" />
    <mkdir dir="${basedir}/target" />
    <jar destfile="${basedir}/target/${jarname}.zip">
      <fileset dir="${mcp.obfoutput.classes}" includes="cpw/**/*.class" />
      <zipfileset dir="${basedir}" includes="version.properties"/>
      <mappedresources>
        <concat>
          <fileset dir="${basedir}" includes="mcmod.info" />
          <filterchain>
            <replacetokens>
              <token key="VERSION" value="${version}" />
            </replacetokens>
          </filterchain>
        </concat>
        <mergemapper to="mcmod.info" />
      </mappedresources>
      <fileset dir="${resource.dir}" erroronmissingdir="false">
	    <filename name="**/*.png" />
	    <filename name="**/*.lang" />
      </fileset>
    </jar>
  </target>

  <target name="build" depends="build-universal" />

  <target name="buildandclean" depends="build">
    <antcall target="clean" />
  </target>

  <!-- antcall target to merge source to a side -->
  <target name="clean-source">
  	<echo>Cleaning ${client.mcp.srcdir}</echo>
    <delete verbose="true">
      <fileset dir="${client.mcp.srcdir}">
        <present present="both" targetdir="${src.dir}" />
      </fileset>
      <fileset dir="${client.mcp.srcdir}">
        <present present="both" targetdir="${ic2api.src.dir}" />
      </fileset>
    </delete>
  </target>
</project>
